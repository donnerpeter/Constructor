def sl = frame() {
  effect = frame(удивительный)
  fun = случай
}
def hap = frame(случиться) {
  theme = sl
  time = past
  experiencer = me
}

def forg = hap.content = frame()
forg.actor = me()
forg.fun = забыть
forg.mode = frame(вдруг)

def come_first = frame(выделенный_элемент) {
  marked = ?
  criteria = frame(первый)
  expressed_by = frame(идти)
  set = frame(set) { 7, 8 }
}
forg.content = question(come_first)

---------------

def go = frame(отправился)
go.agent = me
go.dest = resolve(frame(соседи))

def ask = frame(спросить)
seq(go, ask)
ask.agent = me
ask.goal = resolve(их)

def opinion = frame(думать_о)
ask.content = question(opinion)
opinion.obj = ?
opinion.agent = resolve(они)
def thing = opinion.theme = frame(smth)
thing.topic = resolve(frame(повод) { quantifier = этот })

----------------

def surprise = frame(удивление) {
  degree = !
  time = past
  whose = frame(set) { resove(они), me }
  cause = frame(обнаружить) {
    subj = resolve(они)
    mode = вдруг
    content = frame() {
      negate = +
      fun = мочь
      subj = ^.subj
      content = frame(вспомнить) {
        subj = ^.subj
        theme = frame(порядок) {
          arg = счета
        }
      }
    }
  }
}

--------------------

def remember = frame(помнить) {
  subj = resolve(они_implicit)
  content = frame(set) { 1, 2, 3, 4, 5, 6 }
}
def forget = frame(забыть) {
  subj = resolve(они_implicit)
  content = frame(продолжение) {
    expressed_by = frame(дальше)
    after = remember.content
  }
}
frame(inconsistent) { antecedent = remember, surprise = forget }

---------------------

def go = frame(пойти) {
  time = past
  agent = frame(все) {  }
}