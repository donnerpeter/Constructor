package cons2

 /**
 * @author peter
 */

class Aspect {
  final String role
  final Set<String> nicknames

  def Aspect(String role, String... names) {
    this.role = role
    this.nicknames = names as LinkedHashSet
  }

  def Aspect(String role, Set<String> nicknames) {
    this.role = role;
    this.nicknames = nicknames;
  }

  @Override
  String toString() {
    nicknames.join(";")
  }

  boolean ping(message) {
    if (message instanceof Collection) {
      return message.every { ping it }
    }

    message in nicknames
  }

  String getValue() {
    nicknames.iterator().next()
  }

  boolean equals(o) {
    if (o.is(null)) return false;
    if (this.is(o)) return true;

    if (getClass() != o.class) return false;

    Aspect aspect = (Aspect) o;

    if (nicknames != aspect.nicknames) return false;
    if (role != aspect.role) return false;

    return true;
  }

  int hashCode() {
    int result;

    result = role.hashCode();
    result = 31 * result + nicknames.hashCode();
    return result;
  }
}