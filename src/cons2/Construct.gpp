package cons2

/**
 * @author peter
 */

class Construct {
  Function1<Frame, Void> action = { }
  Predicate1<Frame> wrapUp = { true }
  Set<String> nicknames

  def Construct(String... nicknames) {
    this.nicknames = nicknames as LinkedHashSet
  }

  Construct withAction(Function1<Frame, Void> action) {
    this.action = action
    this
  }

  Construct withWrapUp(Predicate1<Frame> action) {
    this.wrapUp = action
    this
  }

  void activate(Frame f) {
    action.call(f)
  }

  @Override
  String toString() {
    nicknames.join(";")
  }

  boolean ping(message) {
    if (message instanceof List) {
      return message.every { ping it }
    }

    message in nicknames
  }

}