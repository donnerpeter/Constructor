package cons2

/**
 * @author peter
 */
class English implements Language {
  void analyzeWord(Chart chart, String w) {
    chart.newFrame(['super':['phon', w], activate: { Frame frame ->
      if (frame['syn']) return

      switch (w) {
        case "the":
          SimpleQuery query = new HeadConstructingQuery("noun", false, ["syn", "det_noun"], ["noun"], "noun")

          frame.enrich(['super': ["syn", "the"], activate: { Frame f -> query.activate(f) }])
          break
        case "mother":
          frame.enrich(["syn", "noun"], ["sem", "mother"])
          break
        case "loves":
          SynVerb syn = []
          frame.enrich(syn, ["sem", "love"])

          syn.subject.activate(frame, true)
          break
        case "daughter":
          frame.enrich(["syn", "noun"], ["sem", "daughter"])
      }
    }])

  }

  static class SynVerb extends Construct {
    SimpleQuery subject = new SimpleQuery("noun", true, ["syn", 'subject'], ["sem", "state_experiencer"])
    SimpleQuery object = new SimpleQuery("noun", true, ["syn", 'object'], ["sem", "state_theme"])

    def SynVerb() {
      super("syn", "verb")
    }

    @Override
    void activate(Frame f) {
      object.activate f
    }

  }

}
