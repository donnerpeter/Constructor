package cons2

/**
 * @author peter
 */
class Parser {

  Chart parse(String text) {
    def chart = new Chart()
    def words = text.split(" ")

    int pos = 0
    for (w in words) {
      if (w == "мать") {
        def frame = chart.newFrame(pos..pos+1)
        frame.addAspect("syn", "noun")
        frame.addAspect("sem", "mother")
      }
      if (w == "любит") {
        chart.newFrame(pos..pos+1).addAspect("sem", "loves").withAction { Frame f ->
          if (!f.strongUsages("state_experiencer")) {
            def agent = f.findBefore("noun")
            if (agent) {
              f.chart.newFrame(f, agent).addAspect("sem", "state_experiencer", f, agent)
            }
          }
          if (!f.strongUsages("state_theme")) {
            def agent = f.findAfter("noun")
            if (agent) {
              f.chart.newFrame(f, agent).addAspect("sem", "state_theme", f, agent)
            }
          }
        }
      }
      if (w == "дочь") {
        def frame = chart.newFrame(pos..pos+1)
        frame.addAspect("syn", "noun")
        frame.addAspect("sem", "daughter")
      }
      if (w == "красивая") {
        def frame = chart.newFrame(pos..pos+1)
        frame.addAspect("sem", "beautiful").withAction { Frame f ->
          if (!f.strongUsages("property_host")) {
            def host = f.findAfter("noun")
            if (host) {
              f.chart.newFrame(f, host).addAspect("sem", "property_host", f, host)
            }
          }
        }
      }
      if (w == "красивую") {
        def frame = chart.newFrame(pos..pos+1)
        frame.addAspect("sem", "beautiful").withAction { Frame f ->
          if (!f.strongUsages("property_host")) {
            def host = f.findAfter("noun")
            if (host) {
              f.chart.newFrame(f, host).addAspect("sem", "property_host", f, host)
            }
          }
        }
      }
      chart.update()
      pos++
    }


    return chart
  }


}
