package cons2

import cons2.Log.AspectEvent
import cons2.Log.FrameEvent

/**
 * @author peter
 */
class Transfer {

  Chart transfer(Chart rus) {
    def desired = new Chart(new English())
    Map<Frame, Frame> frameMappings = [:]
    rus.log.interestingEvents(['sem', 'time', 'discourse', 'wh_focus']).each {evt ->
      def srcFrame = evt.frame.resolve()
      if (evt instanceof FrameEvent && !((FrameEvent) evt).weakened) {
        if (!frameMappings[srcFrame]) {
          def dstFrame = desired.newFrame(srcFrame.children.collect { frameMappings[it] } as List)
          frameMappings[srcFrame] = dstFrame
        }

      }
      else if (evt instanceof AspectEvent) {
        def aspect = ((AspectEvent) evt).newValue
        if (aspect && srcFrame[aspect.role] == aspect) {
          frameMappings[srcFrame].enrich(aspect)
        }
      }
    }

    return desired
  }

}
