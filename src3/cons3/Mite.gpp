package cons3

/**
 * @author peter
 */
class Mite {
  final Construction cxt
  final FLinkedMap contents
  final Map<Construction, Map> update

  Mite(Map contents, Construction cxt, Map<Construction, Map> update = [:]) {
    this.cxt = cxt
    this.contents = contents instanceof FLinkedMap ? contents : FLinkedMap.fromMap(contents)
    this.update = update
  }

  boolean contradicts(Mite another) {
    if (another == this) return false

    if (another.cxt == cxt) {
      return ParsingState.overwrites(another.contents, contents)
    }
    
    Set<Object> xor1 = contents.xor ?: [] as Set
    Set<Object> xor2 = another.contents.xor ?: [] as Set
    return !Util.intersect(xor1, xor2).empty
  }

  List<Mite> findContradictors(Collection<Mite> mites) {
    mites.findAll { contradicts(it) } as List
  }

  @Override
  public String toString() {
    return "Mite{" +
           "cxt=" + cxt +
           ", contents=" + contents +
           '}';
  }


}
