package cons3

/**
 * @author peter
 */
class NumQuantifier implements Interceptor, RussianConstructions {

  ParsingState intercept(Map<Construction, Map> contribution, ParsingState state, Function2<Map<Construction, Map>, ParsingState, ParsingState> base) {
    def prev = ((ParsingState) state.constructions[numQuantifier].prev).applier
    if (!state.constructions[numQuantifier]?.noun && state.constructions[numQuantifier].num &&
            (gen in contribution.keySet() && !state.constructions[numQuantifier].one ||
                    state.constructions[numQuantifier].one && acc in contribution.keySet())) {
      Update update = new Update([:])
      for (c in contribution.keySet()) {
        update = update.addCxt(contribution[c], c == gen ? acc : c)
        if (c == gen) {
          update = update.addCxt(dativePart, acc:contribution[c].noun)
        }
      }
      return prev(update.map.reverse(), state)
    }
    return base(contribution, state)
  }

  Map<String, Object> getArgs(Construction construction, ParsingState state) {
    null
  }

}

