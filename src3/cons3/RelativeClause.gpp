package cons3

/**
 * @author peter
 */
class RelativeClause extends Construction implements RussianConstructions {

  def RelativeClause() {
    super('relativeClause', ['noun', 'relative', 'wh'])
  }

  @Override
  ParsingState applySemantics(Mite mite, ParsingState state) {
    def args = mite.contents
    state.assign(args.noun, 'relative', args.relative).assign(args.wh, 'relativized', 'true')
  }

  Collection<Mite> enrichUpdate(Mite self, List<Mite> constructions, ParsingState state) {
    if (!self.contents.noun) {
      return []
    }

    if (constructions.find { it.cxt == comma }) {
      if (!self.contents.comma1) {
        return [self.unify(relativeClause(comma1:true, beforeComma:state))]
      }
      if (self.contents.beforeComma) {
        return [afterRelativeClause(beforeComma:self.contents.beforeComma, noun:self.contents.noun, xor:constructions.find { it.cxt == seq }.contents.xor)]
      }
    }
    return self.unifyWherePossible(constructions)
  }

  @Override
  boolean isMiteSatisfied(Mite self) {
    return self.contents.noun
  }
}
