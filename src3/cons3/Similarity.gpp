package cons3

import static cons3.RussianConstructions.*

/**
 * @author peter
 */
class Similarity {
  public static final ArrayList<Construction> importantForSimilarity =
    [nom, acc, gen, dat, instr, prep, poDat, datSubj,
            possessive, parenthetical, comeScalarly, elaboration, declOrQuestionComp, question, complementizer, numQuantifier]

  static boolean areSimilar(List<Mite> c1, List<Mite> c2) {
    def common = c1.findAll { m1 -> m1.cxt in importantForSimilarity && m1.findSimilar(c2) } as List<Mite>
    common = common.findAll { !(it.cxt == possessive && it.contents.head) }
    common = common.findAll { !(it.cxt == numQuantifier && !it.contents.num) }

    if (!common) {
      return false
    }

    def nq1 = c1.findAll { it.cxt == numQuantifier }
    def nq2 = c2.findAll { it.cxt == numQuantifier }
    if (nq1 && nq2 && nq1.every { m1 -> nq2.every { m2 -> !m1.isSimilarTo(m2) } }) {
      return false
    }

    if ((c1.any { it.cxt == question } || c2.any { it.cxt == question }) && !common.any { it.cxt == question }) {
      return false
    }

    return true
  }
}
