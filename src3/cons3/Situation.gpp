package cons3

/**
 * @author peter
 */

class Situation extends Variable {

  String presentable(Chart chart) {
    Map<Variable, String> naming = [:]

    chart.vars(this).eachWithIndex { Variable var, int i ->
      naming[var] = String.valueOf((char)(i + (int)'A'.charAt(0)))
    }
    chart.situations.eachWithIndex { Situation sit, int i ->
      naming[sit] = "#${i + 1}"
    }

    Set<Variable> prevMetas = []
    List<String> lines = []
    for (eq in chart.__assignments[this]) {
      Set<Variable> metas = chart.__metas[eq] as Set
      for (finished in (prevMetas - metas)) {
        lines << "</${naming[finished]}>"
      }
      for (started in (metas - prevMetas)) {
        lines << "<${naming[started]}>"
      }
      prevMetas = metas
      lines << "${naming[eq.frame]}.$eq.property=${ eq.value instanceof String ? eq.value : naming[(Variable)eq.value]}"
    }
    for (finished in prevMetas) {
      lines << "</${naming[finished]}>"
    }
    return lines.join("\n")
  }

}

class Variable {
  private static int counter = 0

  final String id

  Variable() {
    id = ((this instanceof Situation) ? 'Sit' : 'Var') + counter++
  }

  String toString() {
    return "$id"
  }

  Frame frame(Chart chart) {
    new Frame(this, chart.__vars[this], chart)
  }

}

