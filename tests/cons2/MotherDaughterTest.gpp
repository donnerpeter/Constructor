package cons2

import junit.framework.TestCase

/**
 * @author peter
 */
class MotherDaughterTest extends TestCase {

  public void testMLD() throws Exception {
    doTest "мать любит дочь", """
frame: sem=mother
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=daughter
frame ^3 ^1: sem=state_theme
"""
  }
  
  public void testDLM() throws Exception {
    doTest "дочь любит мать", """
frame: sem=daughter
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=mother
frame ^3 ^1: sem=state_theme
"""
  }

  public void testBnDLM() throws Exception {
    doTest "красивая дочь любит мать", """
frame: sem=beautiful
frame
frame ^2 ^1: sem=property_host
^2: sem=daughter
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=mother
frame ^3 ^1: sem=state_theme
"""
  }

  public void testDLBaM() throws Exception {
    doTest "дочь любит красивую мать", """
frame: sem=daughter
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=beautiful
frame
frame ^2 ^1
frame ^5 ^2: sem=state_theme
^2: sem=property_host
^4: sem=mother
"""
  }

  public void testDLF() throws Exception {
    doTest "дочь любит отца", """
frame: sem=daughter
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=father
frame ^3 ^1: sem=state_theme
"""
  }

  public void testFLD() throws Exception {
    doTest "отец любит дочь", """
frame: sem=father
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=daughter
frame ^3 ^1: sem=state_theme
"""
  }

  public void testFaLD() throws Exception {
    doTest "отца любит дочь", """
frame: sem=father
frame: sem=love
frame ^1 ^2: sem=state_theme
frame: sem=daughter
frame ^3 ^1: sem=state_experiencer
"""
  }

  public void testBaMaLD() throws Exception {
    doTest "красивую мать любит дочь", """
frame: sem=beautiful
frame
frame ^2 ^1: sem=property_host
^2: sem=mother
frame: sem=love
frame ^1 ^2: sem=state_theme
frame: sem=daughter
frame ^3 ^1: sem=state_experiencer
"""
  }
  
  public void testMaLBnD() throws Exception {
    doTest "мать любит красивая дочь", """
frame: sem=mother
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=beautiful
frame
frame ^2 ^1: sem=property_host
^2: sem=daughter
frame ^6 ^7: sem=state_theme
frame ^7 ^2: sem=state_experiencer
"""
  }

  public void testDaLFn() throws Exception {
    doTest "дочь любит отец", """
frame: sem=daughter
frame: sem=love
frame ^1 ^2: sem=state_experiencer
frame: sem=father
frame ^3 ^4: sem=state_theme
frame ^4 ^2: sem=state_experiencer
"""
  }

  private def doTest(String input, String expected) {
    def chart = new Parser(new Russian()).parse(input)
    assertEquals expected.trim() + "\n", chart.presentable().trim() + "\n"
  }

}
