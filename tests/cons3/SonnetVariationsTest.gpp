package cons3

import junit.framework.Test
import junit.framework.TestCase
import junit.framework.TestSuite
import static cons3.SonnetTest.doParseTest
import static cons3.SonnetTest.doTranslateTest

/**
 * @author peter
 */
class SonnetVariationsTest extends TestCase {

  public void test3_Short() throws Exception {
    doTranslateTest "Каково же было их и мое удивление",
                    "Great was their and my amazement"
  }

  public void test3_My() throws Exception {
    doTranslateTest "Каково же было мое удивление",
                    "Great was my amazement"
  }
  public void test3_Their() throws Exception {
    doTranslateTest "Каково же было их удивление",
                    "Great was their amazement"
  }

  public void test3_He() throws Exception {
    doTranslateTest "Он вдруг обнаружил, что не может вспомнить порядок счета",
            "He suddenly discovered, that he couldn't recall the counting order"
  }
  public void test3_She() throws Exception {
    doTranslateTest "Она вдруг обнаружила, что не может вспомнить порядок счета",
            "She suddenly discovered, that she couldn't recall the counting order"
  }

  public void test1_Question() throws Exception {
    doTranslateTest "Что идёт раньше - 7 или 8?",
                    "What comes first - 7 or 8?"
  }
  public void testHeForgotThatGoesAfterVasya() throws Exception {
    doTranslateTest "Он забыл, что идет после Васи.",
                    "He forgot, that he went after Vasya."
  }
  public void testSheForgotThatGoesAfterVasya() throws Exception {
    doTranslateTest "Она забыла, что идет после Васи.",
                    "She forgot, that she went after Vasya."
  }
  public void testHeForgotThatBrokeHisJaw() throws Exception {
    doTranslateTest "Он забыл, что сломал себе челюсть.",
                    "He forgot, that he broke his jaw."
  }
  public void testHeForgotThatSheBrokeHisJaw() throws Exception {
    doTranslateTest "Он забыл, что она сломала ему челюсть.",
                    "He forgot, that she broke his jaw."
  }
  public void testSheForgotThatBrokeHerJaw() throws Exception {
    doTranslateTest "Она забыла, что сломала себе челюсть.",
                    "She forgot, that she broke her jaw."
  }
  public void test2_Question() throws Exception {
    doTranslateTest "Что они думают по этому поводу?",
                    "What do they think on this matter?"
  }
  public void test2_ThinkingNotSitting() throws Exception {
    doTranslateTest "Я забыл, что они думают, а не просто сидят.",
                    "I forgot, that they were thinking and not just sitting."
  }
  public void _test2_ThinkingNotSitting() throws Exception {
    doTranslateTest "Я спросил, что они думают, а не что они сказали.",
                    "I forgot, that they were thinking and not just sitting."
  }
  public void _test2_ThinkingNotSitting_He() throws Exception {
    doTranslateTest "Я забыл, что он думает, а не просто сидит.",
                    "I forgot, that he was thinking and not just sitting."
  }
  public void test2_NotSittingThinking() throws Exception {
    doTranslateTest "Я забыл, что они не просто сидят, а думают.",
                    "I forgot, that they were not just sitting, but thinking."
  }
  public void test2_NotThinkingSitting() throws Exception {
    doTranslateTest "Я забыл, что они не думают, а просто сидят.",
                    "I forgot, that they were not thinking, but just sitting."
  }

  public void test1_789() throws Exception {
    doParseTest "Я забыл, что идёт раньше - 7, 8 или 9", """
A.type=ME
B.type=FORGET
B.time=PAST
B.arg1=A
A.gender=masc
A.person=3
-- 2:
B@1.arg2=A
B.type=wh
A.content=C
A.type=question
A.questioned=B
C.time=PRESENT
C.arg1=B
B.person=3
C.type=COME_SCALARLY
C.order=EARLIER
-- 3:
B@2.variants=A
B.type=7
B.number=true
A.member=B
-- 4:
A@3.member=A
A.type=8
A.number=true
A@3.conj=or
A@3.member=B
B.type=9
B.number=true
"""
  }

  public void test1_789_Translation() throws Exception {
    doTranslateTest "Я забыл, что идёт раньше - 7, 8 или 9.", "I forgot what comes first - 7, 8 or 9."
  }

  public void test1_ForgetFact() throws Exception {
    doTranslateTest "Я забыл, что 7 идёт раньше 8.", "I forgot, that a 7 comes before an 8."
  }
  public void test1_Forget2Facts() throws Exception {
    doTranslateTest "Я забыл, что 7 идёт раньше 8 и что 4 идёт после 3.", "I forgot, that a 7 comes before an 8 and that a 4 comes after a 3."
  }
  public void test1_ForgetRecursive() throws Exception {
    doTranslateTest "Я забыл, что я это забыл", "I forgot, that I forgot that"
  }
  public void test1_ForgetRecursiveVO() throws Exception {
    doTranslateTest "Я забыл, что я забыл это", "I forgot, that I forgot that"
  }
  public void test1_ForgetRecursive2() throws Exception {
    doTranslateTest "Я забыл, что я забыл", "I forgot what I forgot"
  }
  public void test1_ForgetRecursive3Fact() throws Exception {
    doTranslateTest "Я забыл, что я забыл, что 7 идет раньше 8", "I forgot, that I forgot, that a 7 comes before an 8"
  }
  public void test1_ForgetRecursive3Question() throws Exception {
    doTranslateTest "Я забыл, что я забыл, что идет после 8", "I forgot, that I forgot what comes after an 8"
  }
  public void _test1_ForgetRecursiveEnumeration() throws Exception {
    doTranslateTest "Я забыл, что я забыл, что идет после 8 и что идет раньше 7",
                    "I forgot, what I forgot, what comes after an 8 and what comes before a 7"
  }
  public void test1_Forget2Questions() throws Exception {
    doTranslateTest "Я забыл, что идёт после 7 и что идёт раньше 8.", "I forgot what comes after a 7 and what comes before an 8."
  }

  public void _test1_ForgetQuestionAndFact() throws Exception {
    doTranslateTest "Я забыл, что 8 идёт после 7 и что идёт раньше 5.",
            "I forgot that 8 comes after a 7 and what comes before a 5."
  }
  public void _test1_ForgetFactAndQuestion() throws Exception {
    doTranslateTest "Я забыл, что идёт после 7 и что 4 идёт раньше 5.",
            "I forgot what comes after a 7 and that 4 comes before a 5."
  }

  public void test4_123TheyRemember() throws Exception {
    doTranslateTest "1, 2 и 3 они помнят", "They remember 1, 2 and 3"
  }
  public void test4_HeRemembers() throws Exception {
    doTranslateTest "1, 2 и 3 помнит, а дальше забыл", "He remembers 1, 2 and 3, but forgot what comes next"
  }
  public void test4_SheRemembers() throws Exception {
    doTranslateTest "1, 2 и 3 помнит, а дальше забыла", "She remembers 1, 2 and 3, but forgot what comes next"
  }

  public void test4_TheyRemember123() throws Exception {
    doTranslateTest "Они помнят 1, 2 и 3", "They remember 1, 2 and 3"
  }

  public void test4_TheyRemember78() throws Exception {
    doTranslateTest "Они помнят семь и восемь", "They remember a seven and an eight"
  }

  public void test4_4() throws Exception {
    doTranslateTest "2 и 3 они помнят, а 4 забыли", "They remember 2 and 3, but forgot 4"
  }

  public void test4_45() throws Exception {
    doTranslateTest "2 и 3 они помнят, а 4 и 5 забыли", "They remember 2 and 3, but forgot 4 and 5"
  }

  public void test4_TheyForgot45() throws Exception {
    doTranslateTest "Они забыли 4 и 5", "They forgot 4 and 5"
  }

  public void test5_Shorter() throws Exception {
    doTranslateTest 'Мы пошли в магазин "Гастроном", что на углу, и спросили кассиршу о нашем недоумении',
                    "We went to a grocery store, the one that's on the corner to consult a cashier on our predicament"
  }

  public void test5_NonameStore() throws Exception {
    doTranslateTest 'Мы пошли в магазин.',
                    "We went to a store."
  }

  public void test5_OnTheCornerOf() throws Exception {
    doTranslateTest 'Мы все пошли в коммерческий магазин "Гастроном" на углу Знаменской и Бассейной улицы и спросили кассиршу о нашем недоумении',
                    "We all went to a commercial grocery store on the corner of Znamenskaya and Basseinaya streets to consult a cashier on our predicament"
  }

  public void test5_OnTheCorner() throws Exception {
    doTranslateTest 'Мы все пошли в коммерческий магазин "Гастроном" на углу и спросили кассиршу о нашем недоумении',
                    "We all went to a commercial grocery store on the corner to consult a cashier on our predicament"
  }

  public void test5_ShopWasOnTheCorner() throws Exception {
    doTranslateTest 'Магазин был на углу.',
                    'The store was on the corner.'
  }

  public void test5_TheCashier() throws Exception {
    doTranslateTest 'Мы спросили кассиршу о нашем недоумении',
                    "We consulted the cashier on our predicament"
  }

  public void test5_OnTheCornerOfStreets() throws Exception {
    doTranslateTest 'Мы все пошли в коммерческий магазин "Гастроном", что на углу Знаменской и Бассейной улиц, и спросили кассиршу о нашем недоумении',
                    "We all went to a commercial grocery store, the one that's on the corner of Znamenskaya and Basseinaya streets to consult a cashier on our predicament"
  }


  public void test6_Shorter() throws Exception {
    doTranslateTest 'Кассирша улыбнулась, вынула изо рта молоточек и сказала:',
                    "The cashier gave us a smile, took a hammer out of her mouth, and said:"
  }

  public void test6_1and3Clauses() throws Exception {
    doTranslateTest 'Кассирша улыбнулась и сказала:',
                    "The cashier gave us a smile and said:"
  }

  public void test6_2and3Clauses() throws Exception {
    doTranslateTest 'Кассирша вынула изо рта молоточек и, подвигав носом, сказала:',
                    "The cashier took a hammer out of her mouth, and moving her nose back and forth, she said:"
  }
  public void test6_2and3Clauses_He() throws Exception {
    doTranslateTest 'Кассир вынул изо рта молоточек и, подвигав носом, сказал:',
                    "The cashier took a hammer out of his mouth, and moving his nose back and forth, he said:"
  }

  public void test6_WithoutBackgrounded() throws Exception {
    doTranslateTest 'Кассирша грустно улыбнулась, слегка подвигала носом и сказала:',
                    "The cashier gave us a sad smile, moved her nose slightly back and forth, and said:"
  }

  public void test6_3ClauseOnly() throws Exception {
    doTranslateTest 'Кассирша, слегка подвигав носом, сказала:',
                    "Moving her nose slightly back and forth, the cashier said:"
  }

  public void test6_MaleCashier() throws Exception {
    doTranslateTest 'Кассир, слегка подвигав носом, сказал:',
                    "Moving his nose slightly back and forth, the cashier said:"
  }
  public void test6_Jaw() throws Exception {
    doTranslateTest 'Кассирша, слегка подвигав челюстью, сказала:',
                    "Moving her jaw slightly back and forth, the cashier said:"
  }
  public void test6_7_IndirectSheShort() throws Exception {
    doTranslateTest 'Кассирша сказала, что семь идет после восьми',
                    "The cashier said that a seven comes after an eight"
  }
  public void test6_7_IndirectNoOpinion() throws Exception {
    doTranslateTest 'Кассирша сказала, что семь идет после восьми в том случае, когда восемь идет после семи',
                    "The cashier said that a seven comes after an eight, only if an eight comes after a seven"
  }
  public void test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Кассирша сказала, что, по ее мнению, семь идет после восьми в том случае, когда восемь идет после семи',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void _test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Кассирша сказала, подвигав носом, что, по ее мнению, семь идет после восьми в том случае, когда восемь идет после семи',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void __test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Кассирша сказала, подвигав носом:\n - Семь идет после восьми.',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void ___test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Я забыл, по чьему мнению семь идет после восьми.',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void ____test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Я забыл, по чьим словам семь идет после восьми.',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void _____test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Я забыл, по чьим словам и мнению семь идет после восьми.',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void ______test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Я забыл, по словам кого семь идет после восьми.',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void _______test6_7_IndirectShe() throws Exception {
    doTranslateTest 'Я забыл, по словам и мнению кого семь идет после восьми.',
                    "The cashier said that in her opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void test6_7_IndirectHeOpinion() throws Exception {
    doTranslateTest 'Кассир сказал, что, по его мнению, семь идет после восьми в том случае, когда восемь идет после семи',
                    "The cashier said that in his opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void test6_7_IndirectHeSevenOpinion() throws Exception {
    doTranslateTest 'Кассир сказал, что семь, по его мнению, идет после восьми в том случае, когда восемь идет после семи',
                    "The cashier said that in his opinion, a seven comes after an eight, only if an eight comes after a seven"
  }
  public void test6_7_IndirectHe() throws Exception {
    doTranslateTest 'Кассир сказал, что семь идет после восьми в том случае, когда восемь идет после семи',
                    "The cashier said that a seven comes after an eight, only if an eight comes after a seven"
  }
  public void test6_7_IndirectHeWhatOpinion() throws Exception {
    doTranslateTest 'Кассир сказал нам, что, по его мнению, идет после восьми',
                    "The cashier told us, what, in his opinion, comes after an eight"
  }
  public void test6_7_IndirectHeWhat() throws Exception {
    doTranslateTest 'Кассир сказал нам, что идет после восьми',
                    "The cashier told us what comes after an eight"
  }
  public void test6_7_IndirectHeShort() throws Exception {
    doTranslateTest 'Кассир сказал, что семь идет после восьми',
                    "The cashier said that a seven comes after an eight"
  }

  public static Test suite() {
    final TestSuite suite = new TestSuite();
    for (i in 0..0) {
      suite.addTestSuite(SonnetVariationsTest.class);
    }
    return suite;
  }

  public void test7_IMO_AfterSubject() throws Exception {
    doTranslateTest 'Семь, по-моему, идет после восьми в том случае, когда восемь идет после семи',
                    "In my opinion, a seven comes after an eight, only if an eight comes after a seven"
  }

  public void test7_IMO_End1Clause() throws Exception {
    doTranslateTest 'Семь идет после восьми в том случае, по-моему, когда восемь идет после семи',
                    "In my opinion, a seven comes after an eight, only if an eight comes after a seven"
  }

  public void test7_Earlier() throws Exception {
    doTranslateTest 'Семь идет раньше восьми в том случае, когда восемь идет раньше семи',
                    "A seven comes before an eight, only if an eight comes before a seven"
  }

  public void test7_JustCaseNotThat() throws Exception {
    doTranslateTest 'Семь идет раньше восьми в случае, когда восемь идет раньше семи',
                    "A seven comes before an eight, only if an eight comes before a seven"
  }

  public void test7_If() throws Exception {
    doTranslateTest 'Семь идет раньше восьми в случае, если восемь идет раньше семи',
                    "A seven comes before an eight, only if an eight comes before a seven"
  }

  public void test7_NoCaseWhen() throws Exception {
    doTranslateTest 'Семь идет раньше восьми, когда восемь идет раньше семи',
                    "A seven comes before an eight, when an eight comes before a seven"
  }

  public void test7_NoCaseIf() throws Exception {
    doTranslateTest 'Семь идет раньше восьми, если восемь идет раньше семи',
                    "A seven comes before an eight, if an eight comes before a seven"
  }

  public void test8_GreatJoy() throws Exception {
    doTranslateTest 'Мы поблагодарили кассиршу и с большой радостью выбежали из магазина',
                    "We thanked the cashier and ran out of the store with great joy"
  }

  public void test8_Relieved() throws Exception {
    doTranslateTest 'Мы поблагодарили кассиршу и с облегчением выбежали из магазина',
                    "We thanked the cashier and ran out of the store with relief"
  }

  public void test8_GreatRelieve() throws Exception {
    doTranslateTest 'Мы поблагодарили кассиршу и с большим облегчением выбежали из магазина',
                    "We thanked the cashier and ran out of the store with great relief"
  }

  public void test8_Her() throws Exception {
    doTranslateTest 'Мы поблагодарили её и с радостью выбежали из магазина',
                    "We thanked her and ran cheerfully out of the store"
  }

  public void test8_HerPostfixJoy() throws Exception {
    doTranslateTest 'Мы поблагодарили ее и выбежали из магазина с радостью',
                    "We thanked her and ran out of the store cheerfully"
  }

  public void test9_Short1() throws Exception {
    doTranslateTest 'Но тут мы опять приуныли',
                    "But there we got sad again"
  }
  public void test9_Short1Then() throws Exception {
    doTranslateTest 'Но потом мы опять приуныли',
                    "But then we got sad again"
  }
  public void test9_ThenNotBut() throws Exception {
    doTranslateTest 'Потом мы опять приуныли',
                    "Then we got sad again"
  }
  public void test9_ThereNotBut() throws Exception {
    doTranslateTest 'Тут мы опять приуныли',
                    "There we got sad again"
  }

  public void test9_ThinkingGotSad() throws Exception {
    doTranslateTest 'Вдумываясь в слова кассирши, мы опять приуныли',
                    "Thinking carefully about cashier's words, we got sad again"
  }
  public void test9_GotSadThinking() throws Exception {
    doTranslateTest 'Мы опять приуныли, вдумываясь в слова кассирши',
                    "We got sad again, thinking carefully about cashier's words"
  }
  public void test9_2Only() throws Exception {
    doTranslateTest 'Ее слова нам показались лишенными всякого смысла',
                    "Her words were void of any meaning"
  }
  public void test9_2WePrefix() throws Exception {
    doTranslateTest 'Нам ее слова показались лишенными всякого смысла',
                    "Her words were void of any meaning"
  }

  public void test9_JustMeaning() throws Exception {
    doTranslateTest 'Ее слова нам показались лишенными смысла',
                    "Her words were void of meaning"
  }

  public void test9_Meaningless() throws Exception {
    doTranslateTest 'Ее слова нам показались бессмысленными',
                    "Her words were meaningless"
  }

  public void test10_WhatToDo() throws Exception {
    doTranslateTest 'Что делать?',
                    'What to do?'
  }
  public void test10_WhatToDo_Me() throws Exception {
    doTranslateTest 'Что мне делать?',
                    'What am I supposed to do?'
  }
  public void test10_WhatToAsk() throws Exception {
    doTranslateTest 'Что спросить?',
                    'What to ask?'
  }
  public void test10_WhatToAsk_Me() throws Exception {
    doTranslateTest 'Что мне спросить?',
                    'What am I supposed to ask?'
  }
  public void test10_Me() throws Exception {
    doTranslateTest 'Что мне было делать?',
                    'What was I supposed to do?'
  }
  public void test10_INeedPresent() throws Exception {
    doTranslateTest 'Что мне нужно?',
                    'What do I need?'
  }
  public void test10_INeedPast() throws Exception {
    doTranslateTest 'Что мне было нужно?',
                    'What did I need?'
  }
  public void test10_WhatDidWeDo() throws Exception {
    doTranslateTest 'Что мы делали?',
                    'What did we do?'
  }
  public void test10_WhatDidIDo() throws Exception {
    doTranslateTest 'Что я делал?',
                    'What did I do?'
  }
  public void test10_Subordinate() throws Exception {
    doTranslateTest 'Я спросил, что делать.',
                    'I asked what to do.'
  }

  public void test11_JustGarden() throws Exception {
    doTranslateTest 'Мы пошли в сад',
                    'We went to the garden'
  }
  public void test11_LittleGardenOnTheCorner() throws Exception {
    doTranslateTest 'Мы пошли в маленький сад на углу',
                    'We went to the small garden on the corner'
  }
  public void test11_BigGardenOnTheCorner() throws Exception {
    doTranslateTest 'Мы пошли в большой сад, что на углу Знаменской и Бассейной улиц',
                    "We went to the big garden, the one that's on the corner of Znamenskaya and Basseinaya streets"
  }
  public void test11_CountMouney() throws Exception {
    doTranslateTest 'Мы стали считать деньги',
                    'We started counting money'
  }
  public void test11_WaterTrees() throws Exception {
    doTranslateTest 'Мы стали поливать деревья',
                    'We started watering trees'
  }
  public void test11_Dance() throws Exception {
    doTranslateTest 'Мы стали танцевать',
                    'We started dancing'
  }
  public void test12_StartedCounting() throws Exception {
    doTranslateTest 'Мы начали считать деревья',
                    'We started counting trees'
  }
  public void test12_ReachingGardenStartedCounting() throws Exception {
    doTranslateTest 'Дойдя до сада, мы начали считать деревья',
                    'Reaching the garden, we started counting trees'
  }
  public void test12_Reaching5() throws Exception {
    doTranslateTest 'Дойдя до 5-ти, мы начали спорить',
                    'Reaching a five, we started arguing'
  }
  public void test12_ButReachingFive() throws Exception {
    doTranslateTest 'Но, дойдя до 5, мы начали спорить',
                    'But reaching a 5, we started arguing'
  }
  public void test12_ReachingFivePostfix() throws Exception {
    doTranslateTest 'Но мы начали спорить, дойдя до 5',
                    'But we started arguing, reaching a 5'
  }
  public void test12_ReachingSixInLetters() throws Exception {
    doTranslateTest 'Дойдя до шести, мы начали спорить',
                    'Reaching a six, we started arguing'
  }
  public void test12_MyTheirOpinion() throws Exception {
    doTranslateTest 'По моему мнению, раньше идет 7, а по их мнению - 8',
                    'In my opinion, a 7 comes first; but in their opinion an 8 does'
  }
  public void test12_HumbleOpinions() throws Exception {
    doTranslateTest 'По моему скромному мнению, раньше идет 7, а по их скромному мнению - 8',
                    'In my humble opinion, a 7 comes first; but in their humble opinion an 8 does'
  }
  public void test12_ImhoVsCashier() throws Exception {
    doTranslateTest 'По-моему, раньше идет 7, а по мнению кассирши - 8',
                    'In my opinion, a 7 comes first; but in the opinion of the cashier an 8 does'
  }
  public void test12_ImhoVsCashierFront7() throws Exception {
    doTranslateTest 'По-моему, 7 идет раньше, а по мнению кассирши - 8',
                    'In my opinion, a 7 comes first; but in the opinion of the cashier an 8 does'
  }
  public void test12_ImhoVsCashierLater() throws Exception {
    doTranslateTest 'По-моему, 7 идет раньше, а по мнению кассирши - потом',
                    'In my opinion, a 7 comes first; but in the opinion of the cashier, it comes next'
  }
  public void test12_AccordingCashier() throws Exception {
    doTranslateTest 'По словам кассирши, раньше идет 7',
                    'According to the cashier, a 7 comes first'
  }
  public void test12_7Next() throws Exception {
    doTranslateTest 'По словам кассирши, потом идет 7',
                    'According to the cashier, a 7 comes next'
  }
  public void test12_ShortNoEllipsis() throws Exception {
    doTranslateTest 'По мнению одних дальше следовало 7, по мнению других дальше следовало 8',
                    'In the opinion of some, a 7 went next; but in opinion of others, an 8 went next'
  }
  public void test12_Before7Followed() throws Exception {
    doTranslateTest 'Раньше потом следовало 7',
                    'Before, a 7 went next'
  }
  public void test12_7After8() throws Exception {
    doTranslateTest 'По словам кассирши, после 8 идет 7',
                    'According to the cashier, a 7 comes after an 8'
  }
  public void test12_7After6() throws Exception {
    doTranslateTest 'После 6-ти идет 7',
                    'A 7 comes after a six'
  }
  public void test12_7WentAfter6() throws Exception {
    doTranslateTest 'После 6 следовало 7',
                    'A 7 went after a 6'
  }
  public void testCashierGoesToTheShop() throws Exception {
    doTranslateTest 'Кассирша идет в магазин',
                    'The cashier goes to the store'
  }
  public void _testCashierFromBasseinayaGoesToTheShop() throws Exception {
    doTranslateTest 'Кассирша с Бассейной идет в магазин',
                    'The cashier from Basseinaya street goes to the store'
  }
  public void _testCashierFromBasseinayaStreetGoesToTheShop() throws Exception {
    doTranslateTest 'Кассирша с Бассейной улицы идет в магазин',
                    'The cashier from Basseinaya street goes to the store'
  }
  public void _testCashierFromStreetBasseinayaGoesToTheShop() throws Exception {
    doTranslateTest 'Кассирша с улицы Бассейной идет в магазин',
                    'The cashier from the street Basseinaya goes to the store'
  }
  public void _testFemaleCashierGoesToTheShopMaleToGarden() throws Exception {
    doTranslateTest 'Кассирша идет в магазин, а кассир - в сад',
                    'The female cashier goes to the store, and the male cashier - to the garden'
  }
  public void testAfterWorkCashierGoesToTheGarden() throws Exception {
    doTranslateTest 'После работы кассирша идет в сад',
                    'After the work, the cashier goes to the garden'
  }
  public void testCashierGoesToTheGardenAfterWork() throws Exception {
    doTranslateTest 'Кассир идет в сад после работы',
                    'The cashier goes to the garden after the work'
  }
  public void testAfterVasyaGoesCashier() throws Exception {
    doTranslateTest 'После Васи идет кассир',
                    'After Vasya, the cashier goes'
  }
  public void testCashierGoesAfterVasya() throws Exception {
    doTranslateTest 'Кассир идет после Васи',
                    'The cashier goes after Vasya'
  }
  public void test12_7Before8() throws Exception {
    doTranslateTest '7 идет раньше 8',
                    'A 7 comes before an 8'
  }
  public void test12_InOpinionCoordination() throws Exception {
    doTranslateTest 'По мнению кассирши и по мнению других, семь идет раньше восьми',
                    'In the opinion of the cashier and in opinion of others, a seven comes before an eight'
  }
  public void test12_InOpinionCoordinationNumbers() throws Exception {
    doTranslateTest 'По мнению кассирши и по мнению других, 7 идет раньше 8',
                    'In the opinion of the cashier and in opinion of others, a 7 comes before an 8'
  }
  public void test12_OpinionCoordination() throws Exception {
    doTranslateTest 'По мнению кассирши и мнению других, 7 идет раньше 8',
                    'In the opinion of the cashier and opinion of others, a 7 comes before an 8'
  }
  public void test12_OpinionantCoordination() throws Exception {
    doTranslateTest 'По мнению кассирши и других, 7 идет раньше 8',
                    'In the opinion of the cashier and others, a 7 comes before an 8'
  }
  public void _test12_StoreCashier() throws Exception {
    doTranslateTest 'По мнению кассирши магазина, семь идет раньше восьми',
                    'In the opinion of the store cashier, a seven comes before an eight'
  }
  public void _test12_StoreCashierAndOthers() throws Exception {
    doTranslateTest 'По мнению кассирши магазина и других, 7 идет раньше 8',
                    'In the opinion of the store cashier and others, a 7 comes before an 8'
  }
  public void test12_OpinionCoordinationWithWords_SamePerson() throws Exception {
    doTranslateTest 'По словам и мнению кассирши, 7 идет раньше 8',
                    'According to and in the opinion of the cashier, a 7 comes before an 8'
  }
  public void test12_OpinionCoordinationWithWords() throws Exception {
    doTranslateTest 'По словам кассирши и по мнению других, 7 идет раньше 8',
                    'According to the cashier and in opinion of others, a 7 comes before an 8'
  }
  public void test12_OpinionCoordinationWithWords_SamePerson_RepeatedPreposition() throws Exception {
    doTranslateTest 'По словам и по мнению кассирши, 7 идет раньше 8',
                    'According to and in the opinion of the cashier, a 7 comes before an 8'
  }

  public void test13_LuckMissingNoCommas() throws Exception {
    doTranslateTest 'Мы спорили бы очень долго, но по счастию тут со скамейки свалился какой-то ребенок и сломал себе обе челюсти',
            'We were arguing for a long time, when by some sheer luck, a child fell off a bench and broke both of his jaws'
  }
  public void test13_LuckMissingComma1() throws Exception {
    doTranslateTest 'Мы спорили бы очень долго, но по счастию, тут со скамейки свалился какой-то ребенок и сломал себе обе челюсти',
            'We were arguing for a long time, when by some sheer luck, a child fell off a bench and broke both of his jaws'
  }
  public void test13_InnerClause() throws Exception {
    doTranslateTest 'По счастию, тут со скамейки свалился какой-то ребенок',
            'By some sheer luck, a child fell off a bench'
  }
  public void test13_InnerClauseLuckMissingComma2() throws Exception {
    doTranslateTest 'По счастию тут со скамейки свалился какой-то ребенок',
            'By some sheer luck, a child fell off a bench'
  }
  public void test13_LuckMissingComma2() throws Exception {
    doTranslateTest 'Мы спорили бы очень долго, но, по счастию тут со скамейки свалился какой-то ребенок',
            'We were arguing for a long time, when by some sheer luck, a child fell off a bench'
  }

  public void test13_OneJaw() throws Exception {
    doTranslateTest 'Ребенок свалился и сломал себе челюсть',
                    'The child fell and broke his jaw'
  }
  public void test13_ManyJaws() throws Exception {
    doTranslateTest 'Ребенок свалился и сломал себе челюсти',
                    'The child fell and broke his jaws'
  }
  public void test13_EightFingers() throws Exception {
    doTranslateTest 'Ребенок сломал себе восемь пальцев',
                    'The child broke eight of his fingers'
  }
  public void test13_8Fingers() throws Exception {
    doTranslateTest 'Ребенок сломал себе 8 пальцев',
                    'The child broke 8 of his fingers'
  }
  public void test13_BothJawsAndEightFingers() throws Exception {
    doTranslateTest 'Ребенок сломал себе обе челюсти и восемь пальцев',
                    'The child broke both of his jaws and eight fingers'
  }
  public void test13_BothJawsAnd8Fingers() throws Exception {
    doTranslateTest 'Ребенок сломал себе обе челюсти и 8 пальцев',
                    'The child broke both of his jaws and 8 fingers'
  }
  public void test13_BothJawsAndTwoFingers() throws Exception {
    doTranslateTest 'Ребенок сломал себе обе челюсти и два пальца',
                    'The child broke both of his jaws and two fingers'
  }
  public void test13_ThreeJaws() throws Exception {
    doTranslateTest 'Ребенок сломал себе 3 челюсти',
                    'The child broke 3 of his jaws'
  }
  public void test13_2Fingers() throws Exception {
    doTranslateTest 'Ребенок сломал себе 2 пальца',
                    'The child broke 2 of his fingers'
  }
  public void test13_ThreeJawsAnd2Fingers() throws Exception {
    doTranslateTest 'Ребенок сломал себе 3 челюсти и 2 пальца',
                    'The child broke 3 of his jaws and 2 fingers'
  }
  public void test13_2FingersAndAJaw() throws Exception {
    doTranslateTest 'Ребенок сломал себе 2 пальца и челюсть',
                    'The child broke 2 of his fingers and a jaw'
  }
  public void test13_BothJawsAndOneFinger() throws Exception {
    doTranslateTest 'Ребенок сломал себе обе челюсти и один палец',
                    'The child broke both of his jaws and one finger'
  }
  public void test13_BothJawsAndFinger() throws Exception {
    doTranslateTest 'Ребенок сломал себе обе челюсти и палец',
                    'The child broke both of his jaws and a finger'
  }
  public void test13_MeFingers() throws Exception {
    doTranslateTest 'Ребенок сломал мне три пальца',
                    'The child broke three of my fingers'
  }
  public void test13_FemaleCashierFingers() throws Exception {
    doTranslateTest 'Кассирша сломала себе 8 пальцев',
                    'The cashier broke 8 of her fingers'
  }
  public void test13_MaleCashierFingers() throws Exception {
    doTranslateTest 'Кассир сломал себе 2 пальца',
                    'The cashier broke 2 of his fingers'
  }
  public void test14_Argument() throws Exception {
    doTranslateTest 'Это отвлекло нас от спора',
            'That distracted us from the argument'
  }
  public void test14_TheirArgument() throws Exception {
    doTranslateTest 'Это отвлекло их от их спора',
            'That distracted them from their argument'
  }

  public void test15_They() throws Exception {
    doTranslateTest 'А потом они разошлись по домам.',
            'And then they all went home.'
  }

  public void test15_ThenThey() throws Exception {
    doTranslateTest 'Потом они разошлись по домам.',
            'Then they all went home.'
  }
  public void test15_AndThey() throws Exception {
    doTranslateTest 'А они разошлись по домам.',
            'And they all went home.'
  }
  public void test15_Rooms() throws Exception {
    doTranslateTest 'А они разошлись по своим комнатам.',
            'And they all went to their rooms.'
  }
  public void test15_RoomsApartments() throws Exception {
    doTranslateTest 'А они разошлись по своим комнатам и квартирам',
            'And they all went to their rooms and apartments'
  }
  public void test15_RoomsApartmentsOffices() throws Exception {
    doTranslateTest 'А они разошлись по своим комнатам, квартирам и офисам.',
            'And they all went to their rooms, apartments and offices.'
  }
  public void test15_TheirOffices() throws Exception {
    doTranslateTest 'Мы разошлись по их офисам.',
            'We all went to their offices.'
  }

}
